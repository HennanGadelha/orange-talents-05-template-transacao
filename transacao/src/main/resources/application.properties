
#MYSQL
spring.datasource.url= jdbc:mysql://${MYSQL_HOST:localhost}:3306/${MYSQL_DATABASE:dbtransacao}?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username= ${MYSQL_USER:root}
spring.datasource.password= ${MYSQL_PASSWORD:87499813}
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

#JPA

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

server.port=8082

# Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:api-transacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

#Tópico de transacoes!
spring.kafka.topic.transactions= ${KAFKA_TOPIC_TRANSACTIONS:transacoes}


#KEYCLOAK
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://keycloak:18080/auth/realms/transacao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://keycloak:18080/auth/realms/transacao/protocol/openid-connect/certs}